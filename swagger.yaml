openapi: 3.0.0
info:
  title: Truck Manager API
  version: "1.0.0"
  description: API documentation for the Truck Manager system

servers:
  - url: http://localhost:5005
    description: Local development server

paths:
  /auth/login:
    post:
      summary: User login
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Credentials'
      responses:
        '200':
          description: Successful authentication
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '401':
          description: Invalid credentials
        '500':
          description: Server error

  /driver/all:
    get:
      summary: Get all drivers
      tags:
        - Drivers
      security:
        - bearerAuth: []
      responses:
        '200':
          description: A list of drivers
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Driver'

  /driver/:
    post:
      summary: Create a new driver
      tags:
        - Drivers
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewDriver'
      responses:
        '201':
          description: Driver created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  driver:
                    $ref: '#/components/schemas/Driver'
        '400':
          description: Cannot create another admin. Only one admin is allowed.
        content:
          application/json:
            schema:
              type: object
              properties:
                error:
                  type: string 
                  properties:
                    error:
                      type: string
                      example: There is one admin. Can not create anotherone.
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

  /driver/{id}:
    get:
      summary: Get a driver by ID
      tags:
        - Drivers
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: The ID of the driver
      responses:
        '200':
          description: Driver found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Driver'
        '404':
          description: Driver not found
        '500':
          description: Server error

    put:
      summary: Update a driver by ID
      tags:
        - Drivers
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewDriver'
      responses:
        '200':
          description: Driver updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Driver'
        '404':
          description: Driver not found
        '500':
          description: Server error

    delete:
      summary: Delete a driver by ID
      tags:
        - Drivers
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Driver deleted
        '404':
          description: Driver not found
        '500':
          description: Server error

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    Credentials:
      type: object
      required:
        - username
        - password
      properties:
        username:
          type: string
          example: user@example.com
        password:
          type: string
          example: hunter2

    AuthResponse:
      type: object
      properties:
        token:
          type: string
          description: JWT access token
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9
        expiresIn:
          type: integer
          description: Expiration time in seconds
          example: 3600

    Driver:
      type: object
      properties:
        _id:
          type: string
          example: 665a282c1cd34ddf8d984b6c
        name:
          type: string
          example: Giannis
        lastname:
          type: string
          example: Papas
        licenseNumber:
          type: string
          example: 1347h743h71hf44j9f818fj3

    NewDriver:
      type: object
      properties:
        name:
          type: string
          example: Kostas
        lastname:
          type: string
          example: Papados
        licenseNumber:
          type: string
          example: AB123456
        username:
          type: string
          example: kostas.papados
        password:
          type: string
          example: supersafePwd
        role:
          type: string
          enum: [admin, driver]
          default: driver
          description: You can not create another admin.
